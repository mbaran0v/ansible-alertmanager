---
- name: create alertmanager system group
  group:
    name: "{{ alertmanager_group }}"
    system: true
    state: present

- name: create alertmanager system user
  user:
    name: "{{ alertmanager_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ alertmanager_group }}"
    createhome: false

- name: create alertmanager directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0755
  with_items:
    - "{{ alertmanager_config_dir }}"
    - "{{ alertmanager_config_dir }}/templates"
    - "{{ alertmanager_db_dir }}"
    - "{{ alertmanager_root_dir }}"

- name: check if installed
  stat:
    path: "{{ alertmanager_root_dir }}/releases/{{ alertmanager_version }}/alertmanager"
  register: alertmanager_bin

- name: remove alertmanager temporary deploy dir
  file:
    path: "{{ alertmanager_root_dir }}/tmp"
    state: absent

- name: create alertmanager temporary deploy dir
  file:
    path: "{{ alertmanager_root_dir }}/tmp"
    state: directory

- name: download alertmanager binary to temporary folder
  get_url:
    url: "{{ alertmanager_download_url }}"
    dest: "{{ alertmanager_root_dir }}/tmp/{{ alertmanager_archive_name }}"
    remote_src: true
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  when: not alertmanager_bin.stat.exists|bool or alertmanager_force_install|bool

- name: unpack alertmanager binaries
  unarchive:
    src: "{{ alertmanager_root_dir }}/tmp/{{ alertmanager_archive_name }}"
    dest: "{{ alertmanager_root_dir }}/tmp"
    remote_src: yes
    creates: "{{ alertmanager_root_dir }}/tmp/{{ alertmanager_extracted_dir }}/alertmanager"
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0755
  when: not alertmanager_bin.stat.exists|bool or alertmanager_force_install|bool

- name: initialize the deploy root and gather facts
  deploy_helper:
    path: "{{ alertmanager_root_dir }}"
    release: "{{ alertmanager_version }}"
    state: present
  when: not alertmanager_bin.stat.exists|bool or alertmanager_force_install|bool

- name: create release directory
  file:
    dest: "{{ deploy_helper.new_release_path }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0750
  when: not alertmanager_bin.stat.exists|bool or alertmanager_force_install|bool

- name: propagate alertmanager, amtool binaries
  command: mv {{ alertmanager_root_dir }}/tmp/{{ alertmanager_extracted_dir }}/{{ item }} {{ deploy_helper.new_release_path }}
  tags: skip_ansible_lint
  with_items:
    - alertmanager
    - amtool
  when: not alertmanager_bin.stat.exists|bool or alertmanager_force_install|bool

- name: create systemd service unit
  template:
    src: alertmanager.service.j2
    dest: /etc/systemd/system/alertmanager.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart alertmanager

- name: finalize the deploy, removing the unfinished file and switching the symlink
  deploy_helper:
    path: "{{ alertmanager_root_dir }}"
    release: "{{ deploy_helper.new_release }}"
    state: finalize
  notify:
    - restart alertmanager
  when: not alertmanager_bin.stat.exists|bool or alertmanager_force_install|bool
